[{"C:\\Users\\dmvsh\\OneDrive\\Documents\\GitHub\\TODOLIST\\src\\index.tsx":"1","C:\\Users\\dmvsh\\OneDrive\\Documents\\GitHub\\TODOLIST\\src\\features\\TodolistsList\\TodolistsList.tsx":"2","C:\\Users\\dmvsh\\OneDrive\\Documents\\GitHub\\TODOLIST\\src\\components\\ErrorSnackbar\\ErrorSnackbar.tsx":"3","C:\\Users\\dmvsh\\OneDrive\\Documents\\GitHub\\TODOLIST\\src\\features\\TodolistsList\\tasks-reducer.ts":"4","C:\\Users\\dmvsh\\OneDrive\\Documents\\GitHub\\TODOLIST\\src\\app\\App.tsx":"5","C:\\Users\\dmvsh\\OneDrive\\Documents\\GitHub\\TODOLIST\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx":"6","C:\\Users\\dmvsh\\OneDrive\\Documents\\GitHub\\TODOLIST\\src\\features\\TodolistsList\\todolists-reducer.ts":"7","C:\\Users\\dmvsh\\OneDrive\\Documents\\GitHub\\TODOLIST\\src\\utils\\error-utils.ts":"8","C:\\Users\\dmvsh\\OneDrive\\Documents\\GitHub\\TODOLIST\\src\\api\\todolists-api.ts":"9","C:\\Users\\dmvsh\\OneDrive\\Documents\\GitHub\\TODOLIST\\src\\features\\Login\\Login.tsx":"10","C:\\Users\\dmvsh\\OneDrive\\Documents\\GitHub\\TODOLIST\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx":"11","C:\\Users\\dmvsh\\OneDrive\\Documents\\GitHub\\TODOLIST\\src\\app\\app-reducer.ts":"12","C:\\Users\\dmvsh\\OneDrive\\Documents\\GitHub\\TODOLIST\\src\\features\\Login\\authReducer.ts":"13"},{"size":776,"mtime":1624462042988,"results":"14","hashOfConfig":"15"},{"size":3802,"mtime":1597327450000,"results":"16","hashOfConfig":"15"},{"size":1533,"mtime":1624462035769,"results":"17","hashOfConfig":"15"},{"size":5635,"mtime":1624464197514,"results":"18","hashOfConfig":"15"},{"size":2821,"mtime":1624522202844,"results":"19","hashOfConfig":"15"},{"size":1773,"mtime":1596295538000,"results":"20","hashOfConfig":"15"},{"size":4589,"mtime":1624464047758,"results":"21","hashOfConfig":"15"},{"size":811,"mtime":1624462042989,"results":"22","hashOfConfig":"15"},{"size":3015,"mtime":1624472063333,"results":"23","hashOfConfig":"15"},{"size":3990,"mtime":1624522417710,"results":"24","hashOfConfig":"15"},{"size":4470,"mtime":1624470403564,"results":"25","hashOfConfig":"15"},{"size":2262,"mtime":1624521608160,"results":"26","hashOfConfig":"15"},{"size":2072,"mtime":1624522428017,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mofvxy",{"filePath":"30","messages":"31","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\dmvsh\\OneDrive\\Documents\\GitHub\\TODOLIST\\src\\index.tsx",[],"C:\\Users\\dmvsh\\OneDrive\\Documents\\GitHub\\TODOLIST\\src\\features\\TodolistsList\\TodolistsList.tsx",["56","57","58","59","60","61","62","63"],"C:\\Users\\dmvsh\\OneDrive\\Documents\\GitHub\\TODOLIST\\src\\components\\ErrorSnackbar\\ErrorSnackbar.tsx",["64","65"],"C:\\Users\\dmvsh\\OneDrive\\Documents\\GitHub\\TODOLIST\\src\\features\\TodolistsList\\tasks-reducer.ts",["66","67"],"import {AddTodolistActionType, RemoveTodolistActionType, SetTodolistsActionType} from './todolists-reducer'\r\nimport {TaskPriorities, TaskStatuses, TaskType, todolistsAPI, UpdateTaskModelType} from '../../api/todolists-api'\r\nimport {Dispatch} from 'redux'\r\nimport {AppRootStateType} from '../../app/store'\r\nimport {setAppErrorAC, SetAppErrorActionType, setAppStatusAC, SetAppStatusActionType} from '../../app/app-reducer'\r\nimport {handleServerAppError, handleServerNetworkError} from '../../utils/error-utils'\r\n\r\nconst initialState: TasksStateType = {}\r\n\r\nexport const tasksReducer = (state: TasksStateType = initialState, action: ActionsType): TasksStateType => {\r\n    switch (action.type) {\r\n        case 'REMOVE-TASK':\r\n            return {...state, [action.todolistId]: state[action.todolistId].filter(t => t.id != action.taskId)}\r\n        case 'ADD-TASK':\r\n            return {...state, [action.task.todoListId]: [action.task, ...state[action.task.todoListId]]}\r\n        case 'UPDATE-TASK':\r\n            return {\r\n                ...state,\r\n                [action.todolistId]: state[action.todolistId]\r\n                    .map(t => t.id === action.taskId ? {...t, ...action.model} : t)\r\n            }\r\n        case 'ADD-TODOLIST':\r\n            return {...state, [action.todolist.id]: []}\r\n        case 'REMOVE-TODOLIST':\r\n            const copyState = {...state}\r\n            delete copyState[action.id]\r\n            return copyState\r\n        case 'SET-TODOLISTS': {\r\n            const copyState = {...state}\r\n            action.todolists.forEach(tl => {\r\n                copyState[tl.id] = []\r\n            })\r\n            return copyState\r\n        }\r\n        case 'SET-TASKS':\r\n            return {...state, [action.todolistId]: action.tasks}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const removeTaskAC = (taskId: string, todolistId: string) =>\r\n    ({type: 'REMOVE-TASK', taskId, todolistId} as const)\r\nexport const addTaskAC = (task: TaskType) =>\r\n    ({type: 'ADD-TASK', task} as const)\r\nexport const updateTaskAC = (taskId: string, model: UpdateDomainTaskModelType, todolistId: string) =>\r\n    ({type: 'UPDATE-TASK', model, todolistId, taskId} as const)\r\nexport const setTasksAC = (tasks: Array<TaskType>, todolistId: string) =>\r\n    ({type: 'SET-TASKS', tasks, todolistId} as const)\r\n\r\n// thunks\r\nexport const fetchTasksTC = (todolistId: string) => (dispatch: Dispatch<ActionsType | SetAppStatusActionType>) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    todolistsAPI.getTasks(todolistId)\r\n        .then((res) => {\r\n            const tasks = res.data.items\r\n            dispatch(setTasksAC(tasks, todolistId))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n}\r\nexport const removeTaskTC = (taskId: string, todolistId: string) => (dispatch: Dispatch<ActionsType>) => {\r\n    todolistsAPI.deleteTask(todolistId, taskId)\r\n        .then(res => {\r\n            const action = removeTaskAC(taskId, todolistId)\r\n            dispatch(action)\r\n        })\r\n}\r\nexport const addTaskTC = (title: string, todolistId: string) => (dispatch: Dispatch<ActionsType | SetAppErrorActionType | SetAppStatusActionType>) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    todolistsAPI.createTask(todolistId, title)\r\n        .then(res => {\r\n            if (res.data.resultCode === 0) {\r\n                const task = res.data.data.item\r\n                const action = addTaskAC(task)\r\n                dispatch(action)\r\n                dispatch(setAppStatusAC('succeeded'))\r\n            } else {\r\n                handleServerAppError(res.data, dispatch);\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            handleServerNetworkError(error, dispatch)\r\n        })\r\n}\r\n\r\nexport const updateTaskTC = (taskId: string, domainModel: UpdateDomainTaskModelType, todolistId: string) =>\r\n    (dispatch: ThunkDispatch, getState: () => AppRootStateType) => {\r\n        const state = getState()\r\n        const task = state.tasks[todolistId].find(t => t.id === taskId)\r\n        if (!task) {\r\n            //throw new Error(\"task not found in the state\");\r\n            console.warn('task not found in the state')\r\n            return\r\n        }\r\n\r\n        const apiModel: UpdateTaskModelType = {\r\n            deadline: task.deadline,\r\n            description: task.description,\r\n            priority: task.priority,\r\n            startDate: task.startDate,\r\n            title: task.title,\r\n            status: task.status,\r\n            ...domainModel\r\n        }\r\n\r\n        todolistsAPI.updateTask(todolistId, taskId, apiModel)\r\n            .then(res => {\r\n                if (res.data.resultCode === 0) {\r\n                    const action = updateTaskAC(taskId, domainModel, todolistId)\r\n                    dispatch(action)\r\n                } else {\r\n                    handleServerAppError(res.data, dispatch);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                handleServerNetworkError(error, dispatch);\r\n            })\r\n    }\r\n\r\n// types\r\nexport type UpdateDomainTaskModelType = {\r\n    title?: string\r\n    description?: string\r\n    status?: TaskStatuses\r\n    priority?: TaskPriorities\r\n    startDate?: string\r\n    deadline?: string\r\n}\r\nexport type TasksStateType = {\r\n    [key: string]: Array<TaskType>\r\n}\r\ntype ActionsType =\r\n    | ReturnType<typeof removeTaskAC>\r\n    | ReturnType<typeof addTaskAC>\r\n    | ReturnType<typeof updateTaskAC>\r\n    | AddTodolistActionType\r\n    | RemoveTodolistActionType\r\n    | SetTodolistsActionType\r\n    | ReturnType<typeof setTasksAC>\r\ntype ThunkDispatch = Dispatch<ActionsType | SetAppStatusActionType | SetAppErrorActionType>\r\n","C:\\Users\\dmvsh\\OneDrive\\Documents\\GitHub\\TODOLIST\\src\\app\\App.tsx",["68"],"C:\\Users\\dmvsh\\OneDrive\\Documents\\GitHub\\TODOLIST\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx",["69","70","71"],"import React, {ChangeEvent, useCallback} from 'react'\r\nimport {Checkbox, IconButton} from '@material-ui/core'\r\nimport {EditableSpan} from '../../../../components/EditableSpan/EditableSpan'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {TaskStatuses, TaskType} from '../../../../api/todolists-api'\r\n\r\ntype TaskPropsType = {\r\n    task: TaskType\r\n    todolistId: string\r\n    changeTaskStatus: (id: string, status: TaskStatuses, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n}\r\nexport const Task = React.memo((props: TaskPropsType) => {\r\n    const onClickHandler = useCallback(() => props.removeTask(props.task.id, props.todolistId), [props.task.id, props.todolistId]);\r\n\r\n    const onChangeHandler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        let newIsDoneValue = e.currentTarget.checked\r\n        props.changeTaskStatus(props.task.id, newIsDoneValue ? TaskStatuses.Completed : TaskStatuses.New, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    const onTitleChangeHandler = useCallback((newValue: string) => {\r\n        props.changeTaskTitle(props.task.id, newValue, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    return <div key={props.task.id} className={props.task.status === TaskStatuses.Completed ? 'is-done' : ''}>\r\n        <Checkbox\r\n            checked={props.task.status === TaskStatuses.Completed}\r\n            color=\"primary\"\r\n            onChange={onChangeHandler}\r\n        />\r\n\r\n        <EditableSpan value={props.task.title} onChange={onTitleChangeHandler}/>\r\n        <IconButton onClick={onClickHandler}>\r\n            <Delete/>\r\n        </IconButton>\r\n    </div>\r\n})\r\n","C:\\Users\\dmvsh\\OneDrive\\Documents\\GitHub\\TODOLIST\\src\\features\\TodolistsList\\todolists-reducer.ts",["72"],"C:\\Users\\dmvsh\\OneDrive\\Documents\\GitHub\\TODOLIST\\src\\utils\\error-utils.ts",[],"C:\\Users\\dmvsh\\OneDrive\\Documents\\GitHub\\TODOLIST\\src\\api\\todolists-api.ts",[],"C:\\Users\\dmvsh\\OneDrive\\Documents\\GitHub\\TODOLIST\\src\\features\\Login\\Login.tsx",["73"],"C:\\Users\\dmvsh\\OneDrive\\Documents\\GitHub\\TODOLIST\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx",["74","75","76","77","78","79"],"C:\\Users\\dmvsh\\OneDrive\\Documents\\GitHub\\TODOLIST\\src\\app\\app-reducer.ts",[],"C:\\Users\\dmvsh\\OneDrive\\Documents\\GitHub\\TODOLIST\\src\\features\\Login\\authReducer.ts",["80","81"],{"ruleId":"82","severity":1,"message":"83","line":34,"column":8,"nodeType":"84","endLine":34,"endColumn":10,"suggestions":"85"},{"ruleId":"82","severity":1,"message":"86","line":39,"column":8,"nodeType":"84","endLine":39,"endColumn":10,"suggestions":"87"},{"ruleId":"82","severity":1,"message":"86","line":44,"column":8,"nodeType":"84","endLine":44,"endColumn":10,"suggestions":"88"},{"ruleId":"82","severity":1,"message":"86","line":49,"column":8,"nodeType":"84","endLine":49,"endColumn":10,"suggestions":"89"},{"ruleId":"82","severity":1,"message":"86","line":54,"column":8,"nodeType":"84","endLine":54,"endColumn":10,"suggestions":"90"},{"ruleId":"82","severity":1,"message":"86","line":59,"column":8,"nodeType":"84","endLine":59,"endColumn":10,"suggestions":"91"},{"ruleId":"82","severity":1,"message":"86","line":64,"column":8,"nodeType":"84","endLine":64,"endColumn":10,"suggestions":"92"},{"ruleId":"82","severity":1,"message":"86","line":69,"column":8,"nodeType":"84","endLine":69,"endColumn":10,"suggestions":"93"},{"ruleId":"94","severity":1,"message":"95","line":2,"column":8,"nodeType":"96","messageId":"97","endLine":2,"endColumn":14},{"ruleId":"94","severity":1,"message":"98","line":14,"column":7,"nodeType":"96","messageId":"97","endLine":14,"endColumn":16},{"ruleId":"94","severity":1,"message":"99","line":5,"column":9,"nodeType":"96","messageId":"97","endLine":5,"endColumn":22},{"ruleId":"100","severity":1,"message":"101","line":13,"column":94,"nodeType":"102","messageId":"103","endLine":13,"endColumn":96},{"ruleId":"82","severity":1,"message":"104","line":32,"column":8,"nodeType":"84","endLine":32,"endColumn":10,"suggestions":"105"},{"ruleId":"82","severity":1,"message":"106","line":15,"column":97,"nodeType":"84","endLine":15,"endColumn":130,"suggestions":"107"},{"ruleId":"82","severity":1,"message":"106","line":20,"column":8,"nodeType":"84","endLine":20,"endColumn":41,"suggestions":"108"},{"ruleId":"82","severity":1,"message":"106","line":24,"column":8,"nodeType":"84","endLine":24,"endColumn":41,"suggestions":"109"},{"ruleId":"100","severity":1,"message":"101","line":10,"column":45,"nodeType":"102","messageId":"103","endLine":10,"endColumn":47},{"ruleId":"110","severity":1,"message":"111","line":45,"column":28,"nodeType":"112","endLine":45,"endColumn":45},{"ruleId":"82","severity":1,"message":"113","line":37,"column":8,"nodeType":"84","endLine":37,"endColumn":10,"suggestions":"114"},{"ruleId":"82","severity":1,"message":"106","line":41,"column":8,"nodeType":"84","endLine":41,"endColumn":42,"suggestions":"115"},{"ruleId":"82","severity":1,"message":"106","line":48,"column":8,"nodeType":"84","endLine":48,"endColumn":54,"suggestions":"116"},{"ruleId":"82","severity":1,"message":"106","line":50,"column":95,"nodeType":"84","endLine":50,"endColumn":134,"suggestions":"117"},{"ruleId":"82","severity":1,"message":"106","line":51,"column":101,"nodeType":"84","endLine":51,"endColumn":140,"suggestions":"118"},{"ruleId":"82","severity":1,"message":"106","line":52,"column":107,"nodeType":"84","endLine":52,"endColumn":146,"suggestions":"119"},{"ruleId":"94","severity":1,"message":"120","line":3,"column":35,"nodeType":"96","messageId":"97","endLine":3,"endColumn":47},{"ruleId":"94","severity":1,"message":"121","line":5,"column":9,"nodeType":"96","messageId":"97","endLine":5,"endColumn":18},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'demo' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["122"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["123"],["124"],["125"],["126"],["127"],["128"],["129"],"@typescript-eslint/no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'useStyles' is assigned a value but never used.","'setAppErrorAC' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["130"],"React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["131"],["132"],["133"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","React Hook useEffect has missing dependencies: 'demo', 'dispatch', and 'props.todolist.id'. Either include them or remove the dependency array.",["134"],["135"],["136"],["137"],["138"],["139"],"'todolistsAPI' is defined but never used.","'addTaskAC' is defined but never used.",{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},{"desc":"142","fix":"144"},{"desc":"142","fix":"145"},{"desc":"142","fix":"146"},{"desc":"142","fix":"147"},{"desc":"142","fix":"148"},{"desc":"142","fix":"149"},{"desc":"142","fix":"150"},{"desc":"151","fix":"152"},{"desc":"151","fix":"153"},{"desc":"151","fix":"154"},{"desc":"155","fix":"156"},{"desc":"151","fix":"157"},{"desc":"151","fix":"158"},{"desc":"151","fix":"159"},{"desc":"151","fix":"160"},{"desc":"151","fix":"161"},"Update the dependencies array to be: [demo, dispatch]",{"range":"162","text":"163"},"Update the dependencies array to be: [dispatch]",{"range":"164","text":"165"},{"range":"166","text":"165"},{"range":"167","text":"165"},{"range":"168","text":"165"},{"range":"169","text":"165"},{"range":"170","text":"165"},{"range":"171","text":"165"},{"range":"172","text":"165"},"Update the dependencies array to be: [props]",{"range":"173","text":"174"},{"range":"175","text":"174"},{"range":"176","text":"174"},"Update the dependencies array to be: [demo, dispatch, props.todolist.id]",{"range":"177","text":"178"},{"range":"179","text":"174"},{"range":"180","text":"174"},{"range":"181","text":"174"},{"range":"182","text":"174"},{"range":"183","text":"174"},[1172,1174],"[demo, dispatch]",[1343,1345],"[dispatch]",[1514,1516],[1719,1721],[1932,1934],[2133,2135],[2280,2282],[2459,2461],[1313,1315],[765,798],"[props]",[1071,1104],[1261,1294],[1575,1577],"[demo, dispatch, props.todolist.id]",[1692,1726],[1957,2003],[2102,2141],[2244,2283],[2392,2431]]